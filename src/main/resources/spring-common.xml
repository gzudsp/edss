<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="  
        http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
        http://www.springframework.org/schema/security   
        http://www.springframework.org/schema/security/spring-security-3.2.xsd  
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/data/jpa   
        http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd  
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">


<!-- 	<context:component-scan base-package="com.work">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan> -->


	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:system.properties</value>
			</list>
		</property>
	</bean>

	<!-- 阿里 druid 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<!-- 数据库基本信息配置 -->
		<property name="url" value="${jdbc.druid.url}" />
		<property name="username" value="${jdbc.druid.username}" />
		<property name="password" value="${jdbc.druid.password}" />
		<property name="driverClassName" value="${jdbc.druid.driverClassName}" />
		<property name="filters" value="${jdbc.druid.filters}" />
		<!-- 最大并发连接数 -->
		<property name="maxActive" value="${jdbc.druid.maxActive}" />
		<!-- 初始化连接数量 -->
		<property name="initialSize" value="${jdbc.druid.initialSize}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${jdbc.druid.maxWait}" />
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="${jdbc.druid.minIdle}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.druid.timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc.druid.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${jdbc.druid.validationQuery}" />
		<property name="testWhileIdle" value="${jdbc.druid.testWhileIdle}" />
		<property name="testOnBorrow" value="${jdbc.druid.testOnBorrow}" />
		<property name="testOnReturn" value="${jdbc.druid.testOnReturn}" />
		<property name="maxOpenPreparedStatements" value="${jdbc.druid.maxOpenPreparedStatements}" />
		<!-- 打开 removeAbandoned 功能 -->
		<property name="removeAbandoned" value="${jdbc.druid.removeAbandoned}" />
		<!-- 1800 秒，也就是 30 分钟 -->
		<property name="removeAbandonedTimeout" value="${jdbc.druid.removeAbandonedTimeout}" />
		<!-- 关闭 abanded 连接时输出错误日志 -->
		<property name="logAbandoned" value="${jdbc.druid.logAbandoned}" />
	</bean>


	<!--生成sqlsession -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.work.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	
		
</beans>
